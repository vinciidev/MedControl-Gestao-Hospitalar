package br.com.clinica.view;

import br.com.clinica.db.UsuarioDAO;
import br.com.clinica.model.Usuario;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;

public class Login {
    private JPanel mainPanel;
    private JPasswordField passwordField1;
    private JButton acessarButton;
    private JTextField loginField;

    private Usuario usuarioAutenticado = null;

    public Login() {
        configurarEventos();
    }

    public JPanel getMainPanel() {
        return mainPanel;
    }

    private void configurarEventos() {
        acessarButton.addActionListener(e -> realizarLogin());
        loginField.addActionListener(e -> realizarLogin());
        passwordField1.addActionListener(e -> realizarLogin());
    }

    private void realizarLogin() {
        String username = loginField.getText().trim();
        String password = new String(passwordField1.getPassword());

        if (username.isEmpty()) {
            JOptionPane.showMessageDialog(mainPanel, "O campo 'Login' é obrigatório.", "Campo Vazio", JOptionPane.WARNING_MESSAGE);
            loginField.requestFocus();
            return;
        }
        if (password.isEmpty()) {
            JOptionPane.showMessageDialog(mainPanel, "O campo 'Senha' é obrigatório.", "Campo Vazio", JOptionPane.WARNING_MESSAGE);
            passwordField1.requestFocus();
            return;
        }

        acessarButton.setEnabled(false);
        acessarButton.setText("Autenticando...");

        SwingWorker<Usuario, Void> worker = new SwingWorker<>() {
            @Override
            protected Usuario doInBackground() throws Exception {
                UsuarioDAO dao = new UsuarioDAO();
                return dao.autenticar(username, password);
            }

            @Override
            protected void done() {
                try {
                    usuarioAutenticado = get();

                    if (usuarioAutenticado != null) {
                        JOptionPane.showMessageDialog(mainPanel,
                                "Acesso concedido! Bem-vindo(a), " + usuarioAutenticado.getNome() + ".",
                                "Login bem-sucedido",
                                JOptionPane.INFORMATION_MESSAGE);

                        abrirProximaTela();

                    } else {
                        JOptionPane.showMessageDialog(mainPanel,
                                "Login ou senha inválidos. Verifique suas credenciais.",
                                "Acesso Negado",
                                JOptionPane.ERROR_MESSAGE);

                        passwordField1.setText("");
                        loginField.requestFocus();
                    }

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(mainPanel,
                            "Ocorreu um erro ao tentar conectar ao sistema.\nDetalhes: " + e.getMessage(),
                            "Erro de Conexão",
                            JOptionPane.ERROR_MESSAGE);
                    e.printStackTrace();
                } finally {
                    acessarButton.setEnabled(true);
                    acessarButton.setText("Acessar");
                }
            }
        };

        worker.execute();
    }

    private void abrirProximaTela() {
        JFrame mainMenuFrame = new JFrame("MedControl - Painel Principal");

        JFrame loginFrame = (JFrame) SwingUtilities.getWindowAncestor(mainPanel);
        if (loginFrame != null) {
            mainMenuFrame.setIconImages(loginFrame.getIconImages());
        }

        MainPainel mainMenuController = new MainPainel(this.usuarioAutenticado);

        mainMenuFrame.setContentPane(mainMenuController.getMainPainel());

        mainMenuFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        mainMenuFrame.setSize(900, 600);
        mainMenuFrame.setLocationRelativeTo(null);
        mainMenuFrame.setVisible(true);

        if (loginFrame != null) {
            loginFrame.dispose();
        }
    }



    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridLayoutManager(8, 3, new Insets(0, 0, 0, 0), -1, -1));
        mainPanel.setBackground(new Color(-262149));
        mainPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(new Color(-2104859)), null, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        final Spacer spacer1 = new Spacer();
        mainPanel.add(spacer1, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final Spacer spacer2 = new Spacer();
        mainPanel.add(spacer2, new GridConstraints(2, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        passwordField1 = new JPasswordField();
        passwordField1.setBackground(new Color(-1444865));
        passwordField1.setText("");
        passwordField1.setToolTipText("");
        mainPanel.add(passwordField1, new GridConstraints(4, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setBackground(new Color(-16777216));
        label1.setForeground(new Color(-16777216));
        label1.setText("Login");
        mainPanel.add(label1, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setForeground(new Color(-16777216));
        label2.setText("Senha");
        mainPanel.add(label2, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer3 = new Spacer();
        mainPanel.add(spacer3, new GridConstraints(5, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final Spacer spacer4 = new Spacer();
        mainPanel.add(spacer4, new GridConstraints(7, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        loginField = new JTextField();
        loginField.setBackground(new Color(-1444865));
        loginField.setEditable(true);
        loginField.setText("");
        loginField.setToolTipText("");
        mainPanel.add(loginField, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        acessarButton = new JButton();
        acessarButton.setBackground(new Color(-15649182));
        acessarButton.setBorderPainted(false);
        acessarButton.setDoubleBuffered(false);
        acessarButton.setEnabled(true);
        acessarButton.setFocusCycleRoot(false);
        acessarButton.setFocusPainted(true);
        acessarButton.setFocusTraversalPolicyProvider(false);
        acessarButton.setFocusable(true);
        acessarButton.setForeground(new Color(-1));
        acessarButton.setHideActionText(false);
        acessarButton.setOpaque(true);
        acessarButton.setSelected(false);
        acessarButton.setText("Acessar");
        mainPanel.add(acessarButton, new GridConstraints(6, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label3 = new JLabel();
        label3.setIcon(new ImageIcon(getClass().getResource("/logos/LogoMed.jpg")));
        label3.setText("");
        mainPanel.add(label3, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

}